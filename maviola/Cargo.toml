[package]
name = "maviola"
description = "High-level MAVLink communication library with support for essential micro-services."
version = "0.2.2"
edition = "2021"
authors = ["Mykhailo Ziatin <ziatin@mathwithoutend.org>"]
repository = "https://gitlab.com/mavka/libs/maviola"
readme = "../README.md"
license = "MIT OR Apache-2.0"
homepage = "https://gitlab.com/mavka/libs/maviola"
keywords = ["MAVLink", "UAV", "drones"]
categories = [
    "aerospace::protocols",
    "aerospace::drones",
    "aerospace::unmanned-aerial-vehicles",
]
resolver = "2"
include = [
    "src",
    "Cargo.toml"
]

[lib]
name = "maviola"
path = "src/lib.rs"

###########################################################
# Dependencies
###########################################################
[dependencies]
log = "0.4.21"
mavio = { version = "0.3.5", features = ["extras", "minimal", "sha2", "std"] }
mavspec = { version = "0.4.6", features = ["std", "rust"], optional = true }
portpicker = "0.1.1"
serde = { version = "1.0.197", default-features = false, features = ["derive"], optional = true }
serde_arrays = { version = "0.1.0", default-features = false, optional = true }
specta = { version = "=2.0.0-rc.22", features = ["derive"], optional = true }
specta-util = { version = "0.0.9", optional = true }
thiserror = "2.0.9"
serialport = { version = "4.6.1", optional = true }

# Async dependencies
async-stream = { version = "0.3.5", optional = true }
async-trait = { version = "0.1.79", optional = true }
tokio = { version = "1.36.0", default-features = false, features = ["sync", "rt", "net", "fs", "io-util", "time"], optional = true }
tokio-stream = { version = "0.1.15", features = ["sync"], optional = true }
tokio-util = { version = "0.7.10", optional = true }
tokio-serial = { version = "5.4.4", optional = true }

[dev-dependencies]
env_logger = "0.11.3"
tokio = { version = "1.36.0", default-features = false, features = ["sync", "rt", "rt-multi-thread", "net", "fs", "io-util", "time", "test-util", "macros"] }

###########################################################
# Features
###########################################################
[features]
## Default features.
default = []
## All stable features (no unsafe features).
## This should be used instead of --all-features for any production environment
full = [
    "derive",
    "sync",
    "async",
    "all",
    "serde",
    "specta",
]

## Includes derive maros from MAVSpec
derive = ["dep:mavspec"]
## Enables synchronous API.
sync = [
    "dep:serialport",
]
## Enables asynchromous API via Tokio.
async = [
    "dep:async-stream",
    "dep:async-trait",
    "dep:tokio",
    "dep:tokio-stream",
    "dep:tokio-util",
    "dep:tokio-serial",
    "mavio/async"
]
## Enables serde support.
serde = [
    "dep:serde",
    "dep:serde_arrays",
    "mavio/serde",
]
## Enables specta support.
specta = [
    "dep:specta",
    "dep:specta-util",
    "mavio/specta",
]
## Enables unstable API features.
unstable = [
    "mavio/unstable"
]
## Unsafe features.
unsafe = [
    "mavio/unsafe"
]

#----------------------------------------------------------
# Dialects
#----------------------------------------------------------
## Include `ardupilotmega` dialect
ardupilotmega = ["common", "mavio/ardupilotmega"]
## Include `ASLUAV` dialect
asluav = ["mavio/asluav"]
## Include `AVSSUAS` dialect
avssuas = ["common", "mavio/avssuas"]
## Include `common` dialect
common = ["minimal", "mavio/common"]
## Include `csAirLink` dialect
cs_air_link = ["mavio/cs_air_link"]
## Include `cubepilot` dialect
cubepilot = ["common", "mavio/cubepilot"]
## Include `development` dialect
development = ["common", "mavio/development"]
## Include `icarous` dialect
icarous = ["mavio/icarous"]
## Include `matrixpilot` dialect
matrixpilot = ["common", "mavio/matrixpilot"]
## Include `minimal` dialect
minimal = ["mavio/minimal"]
## Include `paparazzi` dialect
paparazzi = ["common", "mavio/paparazzi"]
## Include `standard` dialect
standard = ["minimal", "mavio/standard"]
## Include `ualberta` dialect
ualberta = ["common", "mavio/ualberta"]
## Include `uAvionix` dialect
uavionix = ["common", "mavio/uavionix"]

## Include `all` meta-dialect
all = [
    "ardupilotmega",
    "common",
    "asluav",
    "avssuas",
    "cs_air_link",
    "cubepilot",
    "development",
    "icarous",
    "matrixpilot",
    "minimal",
    "paparazzi",
    "standard",
    "ualberta",
    "uavionix",
    "mavio/all"
]

#----------------------------------------------------------
# Test utils (!!! do not use at production !!!)
#----------------------------------------------------------
## Add testing utils that allow to run complex tests.
## Primarily used for documentation but can be utilized by
## other libraries as well.
test_utils = [
    "derive",
    "sync",
    "async",
    "unstable",
    "unsafe",
]

###########################################################
# Examples
###########################################################
[[example]]
name = "tcp_ping_pong"
test = true
required-features = ["sync"]

[[example]]
name = "udp_ping_pong"
test = true
required-features = ["sync"]

[[example]]
name = "sock_ping_pong"
test = true
required-features = ["sync"]

[[example]]
name = "file_rw"
test = true
required-features = ["sync"]

[[example]]
name = "serial_fc"
test = false
required-features = ["sync", "ardupilotmega"]

[[example]]
name = "message_signing"
test = true
required-features = ["sync"]

[[example]]
name = "network"
test = true
required-features = ["sync"]

[[example]]
name = "multiple_devices"
test = true
required-features = ["sync"]

[[example]]
name = "scrambler"
test = true
required-features = ["sync", "unsafe"]

[[example]]
name = "async_tcp_ping_pong"
test = true
required-features = ["async"]

[[example]]
name = "async_udp_ping_pong"
test = true
required-features = ["async"]

[[example]]
name = "async_sock_ping_pong"
test = true
required-features = ["async"]

[[example]]
name = "async_file_rw"
test = true
required-features = ["sync"]

[[example]]
name = "async_serial_fc"
test = false
required-features = ["async", "ardupilotmega"]

[[example]]
name = "async_network"
test = true
required-features = ["async"]

[[example]]
name = "async_multiple_devices"
test = true
required-features = ["async"]

###########################################################
# Linter
###########################################################
[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(rustdoc)'] }

###########################################################
# Metadata
###########################################################
[package.metadata.docs.rs]
# Features to include into `docs.rs` documentation
features = [
    "full",
    "unstable",
    "unsafe",
    "test_utils"
]
